networks:
    meshtopo:
        driver: bridge

volumes:
    mosquitto_data:
    traefik_certs:
    traefik_logs:

services:
    # Traefik reverse proxy with SSL termination (conditional)
    traefik:
        image: traefik:v2.10
        container_name: traefik
        restart: unless-stopped
        command:
            - --api.dashboard=true
            - --api.insecure=false
            - --providers.docker=true
            - --providers.docker.exposedbydefault=false
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            # HTTP Challenge (default)
            - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
            - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
            - --certificatesresolvers.letsencrypt.acme.email=${SSL_EMAIL}
            - --certificatesresolvers.letsencrypt.acme.storage=/certs/acme.json
            # DNS Challenge (if DNS_PROVIDER is set)
            - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
            - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=${DNS_PROVIDER:-}
            - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
            - --log.level=INFO
            - --accesslog=true
        ports:
            - "80:80"
            - "443:443"
            - "8080:8080"  # Traefik dashboard
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - traefik_certs:/certs
            - traefik_logs:/logs
        environment:
            - TZ=UTC
            - CF_API_EMAIL=${DNS_EMAIL:-}
            - CF_API_KEY=${DNS_API_TOKEN:-}
            - CF_ZONE_API_TOKEN=${DNS_ZONE_API_TOKEN:-}
        networks:
            - meshtopo
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.traefik.rule=Host(`traefik.${SSL_DOMAIN}`)"
            - "traefik.http.routers.traefik.entrypoints=websecure"
            - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
            - "traefik.http.routers.traefik.service=api@internal"
        profiles:
            - ssl

    # Mosquitto MQTT broker (conditional)
    mosquitto:
        image: eclipse-mosquitto:2.0
        container_name: mosquitto
        restart: unless-stopped
        ports:
            - "1883:1883"
            - "9001:9001"
        volumes:
            - mosquitto_data:/mosquitto/data
            - mosquitto_data:/mosquitto/log
            - ./mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
            - ./passwd:/mosquitto/config/passwd:ro
            - ./aclfile:/mosquitto/config/aclfile:ro
        networks:
            - meshtopo
        profiles:
            - mqtt
        healthcheck:
            test: ["CMD", "mosquitto_pub", "-h", "localhost", "-t", "test", "-m", "healthcheck"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 10s
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.mosquitto-ws.rule=Host(`mqtt.${SSL_DOMAIN}`)"
            - "traefik.http.routers.mosquitto-ws.entrypoints=websecure"
            - "traefik.http.routers.mosquitto-ws.tls.certresolver=letsencrypt"
            - "traefik.http.routers.mosquitto-ws.service=mosquitto-ws"
            - "traefik.http.services.mosquitto-ws.loadbalancer.server.port=9001"

    # Core Meshtopo gateway service
    meshtopo-gateway:
        image: ghcr.io/${GITHUB_REPOSITORY:-clayauld/meshtopo}:latest
        container_name: meshtopo-gateway
        restart: unless-stopped
        volumes:
            - ./config/config.yaml:/app/config/config.yaml:ro
            - ./logs:/app/logs
        environment:
            - TZ=UTC
        deploy:
            resources:
                limits:
                    memory: 128M
                    cpus: "0.5"
                reservations:
                    memory: 64M
                    cpus: "0.1"
        healthcheck:
            test: ["CMD", "python", "-c", "import requests; requests.get('https://caltopo.com', timeout=5)"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 10s
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"
        networks:
            - meshtopo
        depends_on:
            - mosquitto
        profiles:
            - core
